openapi: 3.0.3
info:
  contact:
    email: info@idtwin.org
    name: Industrial Digital Twin Association (IDTA)
  description: "The Full Profile of the Submodel Registry Service Specification as\
    \ part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).\
    \  \nPublisher: Industrial Digital Twin Association (IDTA) April 2023"
  license:
    name: CC BY 4.0
    url: https://creativecommons.org/licenses/by/4.0/
  title: DotAAS Part 2 | HTTP/REST | Submodel Registry Service Specification
  version: V3.0.1_SSP-001
servers:
- url: /
paths:
  /submodel-descriptors:
    delete:
      operationId: DeleteAllSubmodelDescriptors
      responses:
        "204":
          description: No content
      summary: Deletes all Submodel Descriptors
      tags:
      - Submodel Registry
      x-accepts: application/json
      x-tags:
      - tag: Submodel Registry
    get:
      operationId: GetAllSubmodelDescriptors
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelDescriptorsResult'
          description: Requested Submodel Descriptors
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Submodel Descriptors
      tags:
      - Submodel Registry
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/3/0
      x-accepts: application/json
      x-tags:
      - tag: Submodel Registry
    post:
      operationId: PostSubmodelDescriptor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        description: Submodel Descriptor object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
          description: Submodel Descriptor created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: "Creates a new Submodel Descriptor, i.e. registers a submodel"
      tags:
      - Submodel Registry
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelDescriptor/3/0
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Submodel Registry
  /submodel-descriptors/{submodelIdentifier}:
    delete:
      operationId: DeleteSubmodelDescriptorById
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
        x-utf8-base64-url-encoded-as-string: true
      responses:
        "204":
          description: Submodel Descriptor deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
      summary: "Deletes a Submodel Descriptor, i.e. de-registers a submodel"
      tags:
      - Submodel Registry
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/3/0
      x-accepts: application/json
      x-tags:
      - tag: Submodel Registry
    get:
      operationId: GetSubmodelDescriptorById
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
        x-utf8-base64-url-encoded-as-string: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
          description: Requested Submodel Descriptor
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Submodel Descriptor
      tags:
      - Submodel Registry
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelDescriptorById/3/0
      x-accepts: application/json
      x-tags:
      - tag: Submodel Registry
    put:
      operationId: PutSubmodelDescriptorById
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
        x-utf8-base64-url-encoded-as-string: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        description: Submodel Descriptor object
        required: true
      responses:
        "204":
          description: Submodel Descriptor updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Submodel Descriptor
      tags:
      - Submodel Registry
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelDescriptorById/3/0
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Submodel Registry
  /description:
    get:
      operationId: GetDescription
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
          description: Requested Description
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the self-describing information of a network resource (ServiceDescription)
      tags:
      - Submodel Registry
      x-semanticIds:
      - https://admin-shell.io/aas/API/Descriptor/GetDescription/3/0
      x-accepts: application/json
      x-tags:
      - tag: Submodel Registry
components:
  parameters:
    Limit:
      description: The maximum number of elements in the response array
      explode: true
      in: query
      name: limit
      required: false
      schema:
        minimum: 1
        type: integer
      style: form
    Cursor:
      description: A server-generated identifier retrieved from pagingMetadata that
        specifies from which position the result listing should continue
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        type: string
      style: form
    SubmodelIdentifier:
      description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
      explode: false
      in: path
      name: submodelIdentifier
      required: true
      schema:
        format: byte
        type: string
      style: simple
  responses:
    bad-request:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: "Bad Request, e.g. the request parameters of the format of the\
        \ request body is wrong."
    forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: Forbidden
    not-found:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: Not Found
    internal-server-error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: Internal Server Error
    default:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: Default error handling for unmentioned status codes
    conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: "Conflict, a resource which shall be created exists already. Might\
        \ be thrown if a Submodel or SubmodelElement with the same ShortId is contained\
        \ in a POST request."
  schemas:
    GetSubmodelDescriptorsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - $ref: '#/components/schemas/GetSubmodelDescriptorsResult_allOf'
    PagedResult:
      properties:
        paging_metadata:
          $ref: '#/components/schemas/PagedResult_paging_metadata'
      type: object
    SubmodelDescriptor:
      allOf:
      - $ref: '#/components/schemas/Descriptor'
      - $ref: '#/components/schemas/SubmodelDescriptor_allOf'
      required:
      - endpoints
      - id
    Descriptor:
      properties:
        description:
          items:
            $ref: '#/components/schemas/LangStringTextType'
          type: array
        displayName:
          items:
            $ref: '#/components/schemas/LangStringNameType'
          type: array
        extensions:
          items:
            $ref: '#/components/schemas/Extension'
          minItems: 1
          type: array
      type: object
    LangStringTextType:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - $ref: '#/components/schemas/LangStringTextType_allOf'
    AbstractLangString:
      properties:
        language:
          pattern: "^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"
          type: string
      required:
      - language
      type: object
    LangStringNameType:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - $ref: '#/components/schemas/LangStringNameType_allOf'
    Extension:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Extension_allOf'
    HasSemantics:
      properties:
        semanticId:
          $ref: '#/components/schemas/Reference'
        supplementalSemanticIds:
          items:
            $ref: '#/components/schemas/Reference'
          minItems: 1
          type: array
      type: object
    Reference:
      allOf:
      - $ref: '#/components/schemas/ReferenceParent'
      - $ref: '#/components/schemas/Reference_allOf'
    ReferenceParent:
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          items:
            $ref: '#/components/schemas/Key'
          minItems: 1
          type: array
      required:
      - keys
      - type
      type: object
    ReferenceTypes:
      enum:
      - ExternalReference
      - ModelReference
      type: string
    Key:
      properties:
        type:
          $ref: '#/components/schemas/KeyTypes'
        value:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
      required:
      - type
      - value
      type: object
    KeyTypes:
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataElement
      - Entity
      - EventElement
      - File
      - FragmentReference
      - GlobalReference
      - Identifiable
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - Referable
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElement
      - SubmodelElementCollection
      - SubmodelElementList
      type: string
    DataTypeDefXsd:
      enum:
      - xs:anyURI
      - xs:base64Binary
      - xs:boolean
      - xs:byte
      - xs:date
      - xs:dateTime
      - xs:decimal
      - xs:double
      - xs:duration
      - xs:float
      - xs:gDay
      - xs:gMonth
      - xs:gMonthDay
      - xs:gYear
      - xs:gYearMonth
      - xs:hexBinary
      - xs:int
      - xs:integer
      - xs:long
      - xs:negativeInteger
      - xs:nonNegativeInteger
      - xs:nonPositiveInteger
      - xs:positiveInteger
      - xs:short
      - xs:string
      - xs:time
      - xs:unsignedByte
      - xs:unsignedInt
      - xs:unsignedLong
      - xs:unsignedShort
      type: string
    AdministrativeInformation:
      allOf:
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/AdministrativeInformation_allOf'
    HasDataSpecification:
      properties:
        embeddedDataSpecifications:
          items:
            $ref: '#/components/schemas/EmbeddedDataSpecification'
          minItems: 1
          type: array
      type: object
    EmbeddedDataSpecification:
      properties:
        dataSpecification:
          $ref: '#/components/schemas/Reference'
        dataSpecificationContent:
          $ref: '#/components/schemas/DataSpecificationContent'
      required:
      - dataSpecification
      - dataSpecificationContent
      type: object
    DataSpecificationIec61360:
      properties:
        preferredName:
          items:
            $ref: '#/components/schemas/LangStringPreferredNameTypeIec61360'
          minItems: 1
          type: array
        shortName:
          items:
            $ref: '#/components/schemas/LangStringShortNameTypeIec61360'
          minItems: 1
          type: array
        unit:
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        unitId:
          $ref: '#/components/schemas/Reference'
        sourceOfDefinition:
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        symbol:
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        dataType:
          $ref: '#/components/schemas/DataTypeIec61360'
        definition:
          items:
            $ref: '#/components/schemas/LangStringDefinitionTypeIec61360'
          minItems: 1
          type: array
        valueFormat:
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        valueList:
          $ref: '#/components/schemas/ValueList'
        value:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        levelType:
          $ref: '#/components/schemas/LevelType'
        modelType:
          default: DataSpecificationIec61360
          type: string
      required:
      - modelType
      - preferredName
      type: object
    DataSpecificationContent:
      discriminator:
        propertyName: modelType
      oneOf:
      - $ref: '#/components/schemas/DataSpecificationIec61360'
      required:
      - modelType
      type: object
      x-one-of-name: DataSpecificationContent
    ModelType:
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataSpecificationIec61360
      - Entity
      - File
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElementCollection
      - SubmodelElementList
      type: string
    LangStringPreferredNameTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - $ref: '#/components/schemas/LangStringPreferredNameTypeIec61360_allOf'
    LangStringShortNameTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - $ref: '#/components/schemas/LangStringShortNameTypeIec61360_allOf'
    DataTypeIec61360:
      enum:
      - BLOB
      - BOOLEAN
      - DATE
      - FILE
      - HTML
      - INTEGER_COUNT
      - INTEGER_CURRENCY
      - INTEGER_MEASURE
      - IRDI
      - IRI
      - RATIONAL
      - RATIONAL_MEASURE
      - REAL_COUNT
      - REAL_CURRENCY
      - REAL_MEASURE
      - STRING
      - STRING_TRANSLATABLE
      - TIME
      - TIMESTAMP
      type: string
    LangStringDefinitionTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - $ref: '#/components/schemas/LangStringTextType_allOf'
    ValueList:
      properties:
        valueReferencePairs:
          items:
            $ref: '#/components/schemas/ValueReferencePair'
          minItems: 1
          type: array
      required:
      - valueReferencePairs
      type: object
    ValueReferencePair:
      properties:
        value:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        valueId:
          $ref: '#/components/schemas/Reference'
      required:
      - value
      - valueId
      type: object
    LevelType:
      properties:
        min:
          type: boolean
        nom:
          type: boolean
        typ:
          type: boolean
        max:
          type: boolean
      required:
      - max
      - min
      - nom
      - typ
      type: object
    Endpoint:
      properties:
        interface:
          maxLength: 128
          type: string
        protocolInformation:
          $ref: '#/components/schemas/ProtocolInformation'
      required:
      - interface
      - protocolInformation
      type: object
    ProtocolInformation:
      properties:
        href:
          maxLength: 2048
          type: string
        endpointProtocol:
          maxLength: 128
          type: string
        endpointProtocolVersion:
          items:
            maxLength: 128
            type: string
          type: array
        subprotocol:
          maxLength: 128
          type: string
        subprotocolBody:
          maxLength: 128
          type: string
        subprotocolBodyEncoding:
          maxLength: 128
          type: string
        securityAttributes:
          items:
            $ref: '#/components/schemas/ProtocolInformation_securityAttributes'
          minItems: 1
          type: array
      required:
      - href
      type: object
    Result:
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
      type: object
    Message:
      properties:
        code:
          maxLength: 32
          minLength: 1
          type: string
        correlationId:
          maxLength: 128
          minLength: 1
          type: string
        messageType:
          enum:
          - Undefined
          - Info
          - Warning
          - Error
          - Exception
          type: string
        text:
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    ServiceDescription:
      description: "The Description object enables servers to present their capabilities\
        \ to the clients, in particular which profiles they implement. At least one\
        \ defined profile is required. Additional, proprietary attributes might be\
        \ included. Nevertheless, the server must not expect that a regular client\
        \ understands them."
      example:
        profiles:
        - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-001
        - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-001
      properties:
        profiles:
          items:
            enum:
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-003
            - https://admin-shell.io/aas/API/3/0/AasxFileServerServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/DiscoveryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-003
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-004
            - https://admin-shell.io/aas/API/3/0/ConceptDescriptionServiceSpecification/SSP-001
            type: string
          minItems: 1
          type: array
      type: object
    PagedResult_paging_metadata:
      properties:
        cursor:
          type: string
      type: object
    ProtocolInformation_securityAttributes:
      properties:
        type:
          enum:
          - NONE
          - RFC_TLSA
          - W3C_DID
          type: string
        key:
          type: string
        value:
          type: string
      required:
      - key
      - type
      - value
      type: object
    GetSubmodelDescriptorsResult_allOf:
      properties:
        result:
          items:
            $ref: '#/components/schemas/SubmodelDescriptor'
          type: array
      type: object
      example: null
    SubmodelDescriptor_allOf:
      properties:
        administration:
          $ref: '#/components/schemas/AdministrativeInformation'
        idShort:
          maxLength: 128
          type: string
        id:
          maxLength: 2000
          minLength: 1
          pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*$"
          type: string
        semanticId:
          $ref: '#/components/schemas/Reference'
        supplementalSemanticId:
          items:
            $ref: '#/components/schemas/Reference'
          minItems: 1
          type: array
        endpoints:
          items:
            $ref: '#/components/schemas/Endpoint'
          minItems: 1
          type: array
      type: object
      example: null
    LangStringTextType_allOf:
      properties:
        text:
          maxLength: 1023
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
      required:
      - text
      example: null
    LangStringNameType_allOf:
      properties:
        text:
          maxLength: 128
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
      required:
      - text
      example: null
    Extension_allOf:
      properties:
        name:
          maxLength: 128
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        valueType:
          $ref: '#/components/schemas/DataTypeDefXsd'
        value:
          type: string
        refersTo:
          items:
            $ref: '#/components/schemas/Reference'
          minItems: 1
          type: array
      required:
      - name
      example: null
    Reference_allOf:
      properties:
        referredSemanticId:
          $ref: '#/components/schemas/ReferenceParent'
      example: null
    AdministrativeInformation_allOf:
      properties:
        version:
          pattern: "^(0|[1-9][0-9]{1,3})$"
          type: string
        revision:
          pattern: "^(0|[1-9][0-9]{1,3})$"
          type: string
        creator:
          $ref: '#/components/schemas/Reference'
        templateId:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r \\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
      example: null
    LangStringPreferredNameTypeIec61360_allOf:
      properties:
        text:
          maxLength: 255
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
      required:
      - text
      example: null
    LangStringShortNameTypeIec61360_allOf:
      properties:
        text:
          maxLength: 18
          minLength: 1
          pattern: "^([\\t\\n\\r -\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\\
            ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
      required:
      - text
      example: null
